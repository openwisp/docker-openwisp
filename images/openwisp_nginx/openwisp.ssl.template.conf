# Nginx server - Openwisp SSL

server {
    listen 443 ssl $NGINX_HTTP2;
    $NGINX_IP6_STRING
    server_name $DOMAIN;
    root /opt/openwisp/public/;
    index index.html index.htm;

    client_max_body_size ${NGINX_CLIENT_BODY_SIZE}M;

    # SSL configurations
    ssl_certificate      /etc/letsencrypt/live/${DOMAIN}/fullchain.pem;
    ssl_certificate_key  /etc/letsencrypt/live/${DOMAIN}/privkey.pem;
    ssl_session_cache shared:SSL:20m;
    ssl_session_timeout 10m;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    # generated 2022-02-02, Mozilla Guideline v5.6, nginx 1.17.7, OpenSSL 1.1.1k, intermediate configuration
    # https://ssl-config.mozilla.org/#server=nginx&version=1.17.7&config=intermediate&openssl=1.1.1k&guideline=5.6
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

    # Additional Security Headers
    add_header X-XSS-Protection          "1; mode=block" always;
    add_header X-Content-Type-Options    "nosniff" always;
    add_header Referrer-Policy           "same-site" always;
    add_header Permissions-Policy        "interest-cohort=()" always;
    add_header Strict-Transport-Security "max-age=31536000" always;
    add_header Content-Security-Policy   "default-src http: https: data: blob: 'unsafe-inline'; script-src 'unsafe-eval' https: 'unsafe-inline' 'self'; frame-ancestors 'self'; connect-src *.${ROOT_DOMAIN} wss: 'self'; worker-src https://${DOMAIN} blob: 'self';" always;

    # GZIP Configurations
    gzip ${NGINX_GZIP_SWITCH};
    gzip_static ${NGINX_GZIP_SWITCH};
    gzip_comp_level ${NGINX_GZIP_LEVEL};
    gzip_proxied ${NGINX_GZIP_PROXIED};
    gzip_min_length ${NGINX_GZIP_MIN_LENGTH};
    gzip_types ${NGINX_GZIP_TYPES};

    # Additional Settings
    $NGINX_SSL_CONFIG

    # Nginx Logging
    access_log /dev/stdout main;
    error_log /dev/stdout error;

    # Necessary for Let's Encrypt Domain Name ownership validation
    location /.well-known/ {
        try_files   ${DOLLAR}uri /dev/null =404;
    }
    # Websocket
    location /ws/ {
        rewrite  ^/(.*)  /${DOLLAR}1 break;
        proxy_set_header X-Real-IP ${DOLLAR}remote_addr;
        proxy_set_header X-Forwarded-For ${DOLLAR}proxy_add_x_forwarded_for;
        proxy_set_header Host ${DOLLAR}http_host;
        proxy_redirect off;
        proxy_pass http://${WEBSOCKET_APP_SERVICE}:${WEBSOCKET_APP_PORT};
        proxy_http_version 1.1;
        proxy_set_header Upgrade ${DOLLAR}http_upgrade;
        proxy_set_header Connection "upgrade";
    }
    location /admin/ {
        try_files /custom/maintenance.html ${DOLLAR}uri @uwsgi;
        allow $NGINX_ADMIN_ALLOW_NETWORK;
        deny all;
    }
    location /static/ {
        try_files /custom${DOLLAR}uri /${DOLLAR}uri;
    }
    location / {
        try_files /custom/maintenance.html ${DOLLAR}uri ${DOLLAR}uri/index.html @uwsgi;
    }
    location /media/ {
        alias /opt/openwisp/public/media/;
    }
    location @uwsgi {
        uwsgi_pass ${APP_SERVICE}:${APP_PORT};
        include uwsgi_params;
        uwsgi_param HTTP_X_FORWARDED_PROTO https;
        uwsgi_param REMOTE_ADDR ${NINGX_REAL_REMOTE_ADDR};
    }
}
