---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: openwisp-dashboard
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: openwisp-dashboard
    spec:
      restartPolicy: Always
      containers:
        - name: openwisp-dashboard
          image: openwisp/openwisp-dashboard:latest
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: common-config
          volumeMounts:
            - name: openwisp-static-data
              mountPath: /opt/openwisp/static
            - name: openwisp-media-data
              mountPath: /opt/openwisp/media
            - name: openwisp-private-storage-data
              mountPath: /opt/openwisp/private
          readinessProbe:
            exec:
              command:
                - cat
                - /opt/openwisp/uwsgi.pid
            initialDelaySeconds: 60
            periodSeconds: 30
      volumes:
        - name: openwisp-media-data
          persistentVolumeClaim:
            claimName: media-pv-claim
        - name: openwisp-private-storage-data
          persistentVolumeClaim:
            claimName: private-storage-pv-claim
        - name: openwisp-static-data
          persistentVolumeClaim:
            claimName: static-pv-claim
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: openwisp-api
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: openwisp-api
    spec:
      restartPolicy: Always
      containers:
        - name: openwisp-api
          image: openwisp/openwisp-api:latest
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: common-config
          readinessProbe:
            exec:
              command:
                - cat
                - /opt/openwisp/uwsgi.pid
            initialDelaySeconds: 60
            periodSeconds: 30
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: openwisp-websocket
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: openwisp-websocket
    spec:
      restartPolicy: Always
      containers:
        - name: openwisp-websocket
          image: openwisp/openwisp-websocket:latest
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: common-config
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: openwisp-nginx
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: openwisp-nginx
    spec:
      restartPolicy: Always
      containers:
        - name: openwisp-nginx
          image: openwisp/openwisp-nginx:latest
          ports:
            - containerPort: 443
            - containerPort: 80
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: common-config
          volumeMounts:
            - name: openwisp-static-data
              mountPath: /opt/openwisp/public/static
              readOnly: true
            - name: openwisp-media-data
              mountPath: /opt/openwisp/public/media
              readOnly: true
            - name: openwisp-private-storage-data
              mountPath: /opt/openwisp/private
              readOnly: true
          readinessProbe:
            httpGet:
              path: /status
              port: 80
            initialDelaySeconds: 15
            periodSeconds: 5
            failureThreshold: 2
            successThreshold: 2
      volumes:
        - name: openwisp-static-data
          persistentVolumeClaim:
            claimName: static-pv-claim
        - name: openwisp-media-data
          persistentVolumeClaim:
            claimName: media-pv-claim
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: openwisp-postgres
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: openwisp-postgres
    spec:
      restartPolicy: Always
      containers:
        - name: openwisp-postgres
          image: mdillon/postgis:10-alpine
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: common-config
            - configMapRef:
                name: postgres-config
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: openwisp-postgres-data
      volumes:
        - name: openwisp-postgres-data
          persistentVolumeClaim:
            claimName: postgres-pv-claim
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: openwisp-postfix
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: openwisp-postfix
    spec:
      restartPolicy: Always
      containers:
        - name: openwisp-postfix
          image: openwisp/openwisp-postfix:latest
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: common-config
          volumeMounts:
            - mountPath: /etc/ssl/mail
              name: openwisp-certs-data
      volumes:
        - name: openwisp-certs-data
          persistentVolumeClaim:
            claimName: certs-pv-claim
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: openwisp-freeradius
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: openwisp-freeradius
    spec:
      restartPolicy: Always
      containers:
        - name: openwisp-freeradius
          image: openwisp/openwisp-freeradius:latest
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: common-config
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: openwisp-openvpn
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: openwisp-openvpn
    spec:
      restartPolicy: Always
      containers:
        - name: openwisp-openvpn
          image: openwisp/openwisp-openvpn:latest
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: common-config
          securityContext:
            capabilities:
              add: ["NET_ADMIN"]
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: openwisp-celery
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: openwisp-celery
    spec:
      containers:
        - name: openwisp-celery
          image: openwisp/openwisp-dashboard:latest
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: common-config
          env:
            - name: MODULE_NAME
              value: celery
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: openwisp-celerybeat
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: openwisp-celerybeat
    spec:
      containers:
        - name: openwisp-celerybeat
          image: openwisp/openwisp-dashboard:latest
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: common-config
          env:
            - name: MODULE_NAME
              value: celerybeat
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: redis
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: redis
    spec:
      restartPolicy: Always
      containers:
        - name: redis
          image: redis:alpine
          imagePullPolicy: Always
